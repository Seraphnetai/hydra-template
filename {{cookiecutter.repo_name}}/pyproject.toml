[project]
Epic = "{{cookiecutter.epic}}"
Story = "{{cookiecutter.story"

[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.short_description}}"
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]
readme = "README.md"
packages = [{include = "{{cookiecutter.repo_name}}"}]
maintainers = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]

[tool.poetry.dependencies]
drim-21-dictionaries = {git = "ssh://git@github.com/atlasus-ai/drim_21_dictionaries.git", rev = "master"}
python = "^3.8"
hydra-core = "^1.3.2"
hydra-colorlog = "^1.2.0"
hydra-joblib-launcher = "^1.2.0"
pydantic = "^1.10.7"
pyyaml = "^6.0"

[tool.poetry.group.dev.dependencies]
pylint = "^2.17.4"
mypy = "^1.3.0"
isort = "^5.12.0"
pytest = "^7.3.1"
ipykernel = "^6.23.0"
jupyter = "^1.0.0"
pytest-cov = "^4.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "-ra",
]
log_cli = "True"
markers = [
  "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]
fail_under = 80

[tool.isort]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "AGRLIB", "DRIM21DICTIONARIES", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = []
known_agrlib = "agr_lib"
known_drim21dictionaries = "drim_21_dictionaries"
multi_line_output = 5
line_length = 120